FEATURES {
    STARTADDRESS: default = $2E00;
}
SYMBOLS {
    __STACKSIZE__:       type = weak, value = $0800; # 2k stack
    __RESERVED_MEMORY__: type = weak, value = $0000;
}
MEMORY {
    ZP:      file = "", define = yes, start = $0082, size = $007E;
    HEADER:  file = %O,               start = $0000, size = $0006;
    RAM:     file = %O,               start = %S,    size = $BC20 - __STACKSIZE__ - %S;
    TRAILER: file = %O,               start = $0000, size = $0006;
}
SEGMENTS {
    EXEHDR:   load = HEADER,  type = ro;
    STARTUP:  load = RAM,     type = ro,  define = yes;
    LOWCODE:  load = RAM,     type = ro,  define = yes, optional = yes;
    INIT:     load = RAM,     type = ro,                optional = yes;
    CODE:     load = RAM,     type = ro,  define = yes;
    RODATA:   load = RAM,     type = ro;
    DATA:     load = RAM,     type = rw;
    ZPSAVE:   load = RAM,     type = bss, define = yes;
    BSS:      load = RAM,     type = bss, define = yes;
    ZEROPAGE: load = ZP,      type = zp;
    EXTZP:    load = ZP,      type = zp,                optional = yes;
    AUTOSTRT: load = TRAILER, type = ro;
}
FEATURES {
    CONDES: segment = INIT,
	    type    = constructor,
	    label   = __CONSTRUCTOR_TABLE__,
	    count   = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = destructor,
	    label   = __DESTRUCTOR_TABLE__,
	    count   = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = interruptor,
	    label   = __INTERRUPTOR_TABLE__,
	    count   = __INTERRUPTOR_COUNT__,
            import  = __CALLIRQ__;
}
