MEMORY {
    ZP:     start = $0082, size = $007E, type = rw, define = yes;
    HEADER: start = $0000, size = $0006, file = %O;
    RAM:    start = $2E00, size = $8E20, file = %O;    # $8E20: matches upper bound $BC1F
}
SEGMENTS {
    EXEHDR:   load = HEADER, type = ro;
    LOWCODE:  load = RAM,    type = ro, define = yes, optional = yes;
    INIT:     load = RAM,    type = ro,               optional = yes;
    CODE:     load = RAM,    type = ro;
    RODATA:   load = RAM,    type = ro;
    DATA:     load = RAM,    type = rw;
    BSS:      load = RAM,    type = bss, define = yes;
    ZEROPAGE: load = ZP,     type = zp;
    AUTOSTRT: load = RAM,    type = ro;
}
FEATURES {
    CONDES: segment = INIT,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
}
SYMBOLS {
    __STACKSIZE__ = $800;	# 2K stack
}
