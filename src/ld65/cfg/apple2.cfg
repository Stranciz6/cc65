MEMORY {
    ZP: start = $00, size = $1A, type = rw, define = yes;
    HEADER: start = $0000, size = $4, file = %O;
    RAM: start = $800, size = $8E00, file = %O;
}
SEGMENTS {
    EXEHDR: load = HEADER, type = ro;
    STARTUP: load = RAM, type = ro, define = yes;
    LOWCODE: load = RAM, type = ro, optional = yes;
    CODE: load = RAM, type = ro;
    RODATA: load = RAM, type = ro;
    DATA: load = RAM, type = rw;
    BSS: load = RAM, type = bss, define = yes;
    ZEROPAGE: load = ZP, type = zp;
}
FEATURES {
    CONDES: segment = RODATA,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
}
SYMBOLS {
    __STACKSIZE__ = $800;	# 2K stack
}


