SYMBOLS {
    __STACKSIZE__: type = weak, value = $0400; # 1k stack
}
MEMORY {
    ZP:     file = "", define = yes, start = $0058, size = $0028;
    HEADER: file = %O,               start = $0204, size = $01FC;
    RAM:    file = %O, define = yes, start = $0400, size = $5C00 - __STACKSIZE__;
}
SEGMENTS {
    HEADER:   load = HEADER, type = ro;
    STARTUP:  load = RAM,    type = ro;
    LOWCODE:  load = RAM,    type = ro,                optional = yes;
    INIT:     load = RAM,    type = ro,  define = yes, optional = yes;
    CODE:     load = RAM,    type = ro;
    RODATA:   load = RAM,    type = ro;
    DATA:     load = RAM,    type = rw;
    BSS:      load = RAM,    type = bss, define = yes;
    ZEROPAGE: load = ZP,     type = zp;
    EXTZP:    load = ZP,     type = zp;
}
FEATURES {
    CONDES: segment = INIT,
	    type    = constructor,
	    label   = __CONSTRUCTOR_TABLE__,
	    count   = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = destructor,
	    label   = __DESTRUCTOR_TABLE__,
	    count   = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = interruptor,
	    label   = __INTERRUPTOR_TABLE__,
	    count   = __INTERRUPTOR_COUNT__;
}
