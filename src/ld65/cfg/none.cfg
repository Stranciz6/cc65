SYMBOLS {
    __STACKSIZE__: value = $0800, weak = yes; # 2k stack
}
MEMORY {
    ZP:  define = yes, start = $0000, size = $0001F;
    RAM: file = %O,    start = %S,    size = $10000 - __STACKSIZE__;
}
SEGMENTS {
    LOWCODE:  load = RAM, type = ro,                optional = yes;
    INIT:     load = RAM, type = ro,  define = yes, optional = yes;
    CODE:     load = RAM, type = rw;
    RODATA:   load = RAM, type = rw;
    DATA:     load = RAM, type = rw;
    BSS:      load = RAM, type = bss, define = yes;
    ZEROPAGE: load = ZP,  type = zp;
}
FEATURES {
    CONDES: segment = INIT,
	    type    = constructor,
	    label   = __CONSTRUCTOR_TABLE__,
	    count   = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = destructor,
	    label   = __DESTRUCTOR_TABLE__,
	    count   = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type    = interruptor,
	    label   = __INTERRUPTOR_TABLE__,
	    count   = __INTERRUPTOR_COUNT__;
}
