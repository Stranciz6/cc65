FEATURES {
    STARTADDRESS:  default = $0801;
}
SYMBOLS {
    __LOADADDR__:  type = import;
    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __HIMEM__:     type = weak, value = $D000;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0002,           size = $001A;
    LOADADDR: file = %O,               start = %S - 2,          size = $0002;
    HEADER:   file = %O, define = yes, start = %S,              size = $000D;
    RAM:      file = %O,               start = __HEADER_LAST__, size = __HIMEM__ - __STACKSIZE__ - __HEADER_LAST__;
    MOVE:     file = %O,               start = __ZPSAVE_LOAD__, size = __HIMEM__ - __INIT_RUN__;
}
SEGMENTS {
    ZEROPAGE: load = ZP,              type = zp;
    LOADADDR: load = LOADADDR,        type = ro;
    EXEHDR:   load = HEADER,          type = ro;
    STARTUP:  load = RAM,             type = ro;
    LOWCODE:  load = RAM,             type = ro,                optional = yes;
    CODE:     load = RAM,             type = ro;
    RODATA:   load = RAM,             type = ro;
    DATA:     load = RAM,             type = rw;
    ZPSAVE:   load = RAM,             type = bss, define = yes;
    BSS:      load = RAM,             type = bss, define = yes;
    INIT:     load = MOVE, run = RAM, type = ro,  define = yes;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = INIT;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
