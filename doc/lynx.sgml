<!doctype linuxdoc system>

<article>

<title>Atari Lynx specific information for cc65
<author>Karri Kaksonen, <htmlurl url="mailto:karri@sipo.fi" name="karri@sipo.fi">
Ullrich von Bassewitz, <htmlurl url="mailto:uz@cc65.org" name="uz@cc65.org">
<date>2004-10.14

<abstract>
An overview over the Atari Lynx runtime system as it is implemented for the
cc65 C compiler.
</abstract>

<!-- Table of contents -->
<toc>

<!-- Begin the document -->

<sect>Overview<p>

This file contains an overview of the Atari Lynx runtime system as it comes
with the cc65 C compiler. It describes the memory layout, Lynx specific header
files, available drivers, and any pitfalls specific to that platform.

Please note that Lynx specific functions are just mentioned here, they are
described in detail in the separate <htmlurl url="funcref.html" name="function
reference">. Even functions marked as "platform dependent" may be available on
more than one platform. Please see the function reference for more
information.


<sect>Binary format<p>

The standard binary output format generated by the linker for the VIC20 target
is a machine language program with a one line BASIC stub. This means that a
program can be loaded as BASIC program and started with RUN. It is of course
possible to change this behaviour by using a modified startup file and linker
config.


<sect>Memory layout<p>

cc65 generated programs with the default setup run with the I/O area and the
kernal and BASIC ROM enabled (RAM at &dollar;A000 - &dollar;BFFF may be used
for the heap), which gives a usable memory range of &dollar;1000 - &dollar;1DFF.
All ROM entry points may be called directly without additional code.

Special locations:

<descrip>
  <tag/Text screen/
  The text screen is located at &dollar;1E00 (as in the standard setup).

  <tag/Stack/
  The C runtime stack is located at &dollar;1DFF and growing downwards.

  <tag/Heap/
  The C heap is located at the end of the program and grows towards the C
  runtime stack.

</descrip><p>



<sect>Platform specific header files<p>

Programs containing Lynx specific code may use the <tt/lynx.h/ header file.


<sect1>Lynx specific functions<p>

<itemize>
<item>lynx_change_framerate
<item>lynx_eeprom_erase
<item>lynx_eeprom_read
<item>lynx_eeprom_write
</itemize>



<sect1>Hardware access<p>

The following pseudo variables declared in the <tt/lynx.h/ header file do
allow access to hardware located in the address space. Some variables are
structures, accessing the struct fields will access the chip registers.

<descrip>

  <tag><tt/MIKEY/</tag>
  The <tt/MIKEY/ structure allows access to MIKEY chip. See the <tt/_mikey.h/
  header file located in the include directory for the declaration of the
  structure.

  <tag><tt/SUZY/</tag>
  The <tt/SUZY/ structure allows access to SUZY chip. See the <tt/_suzy.h/
  header file located in the include directory for the declaration of the
  structure.

</descrip><p>



<sect>Loadable drivers<p>

<sect1>Graphics drivers<p>

A TGI driver for the standard graphics mode (160*102 in 16 colors) is
available, but must be statically linked, because no file I/O is available.
See the documentation for the <htmlurl url="co65.html" name="co65 utility">
for information on how to do that.


<sect1>Extended memory drivers<p>

No extended memory drivers are currently available for the Lynx.


<sect1>Joystick drivers<p>

A joystick driver for the standard buttons is available, but must be
statically linked, because no file I/O is available. See the documentation for
the <htmlurl url="co65.html" name="co65 utility"> for information on how to do
that.


<sect1>Mouse drivers<p>

No mouse drivers are currently available for the Lynx.


<sect1>RS232 device drivers<p>

No serial drivers are currently available for the Lynx.



<sect>Limitations<p>



<sect>Other hints<p>



<sect>Bugs/Feedback<p>

If you have problems using the library, if you find any bugs, or if you're
doing something interesting with it, I would be glad to hear from you. Feel
free to contact me by email (<htmlurl url="mailto:uz@cc65.org"
name="uz@cc65.org">).



<sect>License<p>

This software is provided 'as-is', without any expressed or implied
warranty.  In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

<enum>
<item>	The origin of this software must not be misrepresented; you must not
	claim that you wrote the original software. If you use this software
	in a product, an acknowledgment in the product documentation would be
	appreciated but is not required.
<item>	Altered source versions must be plainly marked as such, and must not
	be misrepresented as being the original software.
<item>	This notice may not be removed or altered from any source
	distribution.
</enum>

</article>



